import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.*;
/*
 *  프로그래머스 문제 풀이
 *  https://school.programmers.co.kr/learn/courses/30/lessons/42579
 *  입력 : 노래의 장르를 나타내는 문자열 배열 genres와 노래별 재생 횟수를 나타내는 정수 배열 plays
 *  출력 : 베스트 앨범에 들어갈 노래의 고유 번호를 순서대로 return
 */

class July_01_05 {
    public int[] solution(String[] genres, int[] plays) {
        HashMap<String, Integer> totalPlayTime = new HashMap<>();
        HashMap<String, PriorityQueue<Song>> songMap = new HashMap<>();

        for (int i = 0; i < genres.length; i++) {
            String genre = genres[i];
            int playTime = plays[i];

            totalPlayTime.put(genre, totalPlayTime.getOrDefault(genre, 0) + playTime);

            if (!songMap.containsKey(genre)) {
                songMap.put(genre, new PriorityQueue<>(new Comparator<Song>() {
                    @Override
                    public int compare(Song s1, Song s2) {
                        if (s1.playTime == s2.playTime)
                            return s1.id - s2.id;
                        return s2.playTime - s1.playTime;
                    }
                }));
            }

            songMap.get(genre).add(new Song(i, playTime));
        }

        List<String> sortedGenres = sortByPlayTime(totalPlayTime);
        List<Integer> answerList = new ArrayList<>();

        for (String genre : sortedGenres) {
            PriorityQueue<Song> pq = songMap.get(genre);

            int count = 0;
            while (!pq.isEmpty() && count < 2) {
                answerList.add(pq.poll().id);
                count++;
            }
        }

        int[] answer = new int[answerList.size()];
        for (int i = 0; i < answerList.size(); i++) {
            answer[i] = answerList.get(i);
        }

        return answer;
    }

    private List<String> sortByPlayTime(HashMap<String, Integer> totalPlayTime) {
        List<String> sortedGenres = new ArrayList<>(totalPlayTime.keySet());
        sortedGenres.sort((g1, g2) -> totalPlayTime.get(g2) - totalPlayTime.get(g1));
        return sortedGenres;
    }

    class Song {
        int id;
        int playTime;

        public Song(int id, int playTime) {
            this.id = id;
            this.playTime = playTime;
        }
    }
}
